{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Saloon%20Project/client/src/app/api/endpoints.js"],"sourcesContent":["export const endpoint = {\r\n    BARBER: {\r\n      GET: '/get-employee',\r\n    },\r\n    SERVICE: {\r\n      GET: '/get-service',\r\n    },\r\n    ADMIN: {\r\n      BARBER: {\r\n        ADD: '/add-employee',\r\n        DELETE: (id) => `/delete-employee/${id}`,\r\n      },\r\n      SERVICE :{\r\n        DELETE: (id) => `/delete-service/${id}` ,\r\n        ADD : '/add-service',\r\n      }\r\n    },\r\n  };\r\n  "],"names":[],"mappings":";;;AAAO,MAAM,WAAW;IACpB,QAAQ;QACN,KAAK;IACP;IACA,SAAS;QACP,KAAK;IACP;IACA,OAAO;QACL,QAAQ;YACN,KAAK;YACL,QAAQ,CAAC,KAAO,CAAC,iBAAiB,EAAE,IAAI;QAC1C;QACA,SAAS;YACP,QAAQ,CAAC,KAAO,CAAC,gBAAgB,EAAE,IAAI;YACvC,KAAM;QACR;IACF;AACF","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Saloon%20Project/client/src/redux/features/BarberSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { endpoint } from '../../app/api/endpoints';\r\nexport interface Barber {\r\n  _id: string;\r\n  employeeName: string;\r\n  employeeFees: number;\r\n  specialCut: string;\r\n  description?: string;\r\n  employeeImage?: string;\r\n}\r\n\r\ninterface BarberState {\r\n  barbers: Barber[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: BarberState = {\r\n  barbers: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n\r\nexport const fetchBarbers = createAsyncThunk('barbers/fetchAll', async (_, thunkAPI) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:5001/api${endpoint.BARBER.GET}`);\r\n    return res.data.employees as Barber[];\r\n  } catch (error: any) {\r\n    console.log(error,\"hh\");\r\n    \r\n    return thunkAPI.rejectWithValue(error.response?.data?.message || 'Failed to fetch barbers');\r\n\r\n  }\r\n});\r\n\r\nexport const deleteBarber = createAsyncThunk(\r\n  'barbers/deleteBarber',\r\n  async (barberId: string, thunkAPI) => {\r\n    console.log(barberId, \"fsdfsfdsf\")\r\n    try {\r\n      await axios.delete(`http://localhost:5001/api/${endpoint.ADMIN.BARBER.DELETE(barberId)}`);\r\n      console.log(barberId , \"barber id\");\r\n      \r\n      return barberId;\r\n    } catch (error: any) {\r\n      console.log(error , \" sdfghjkl \");\r\n      \r\n      return thunkAPI.rejectWithValue(error.response?.data?.message || 'Failed to delete barber');\r\n    }\r\n  }\r\n);\r\n\r\nconst barberSlice = createSlice({\r\n  name: 'barbers',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchBarbers.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchBarbers.fulfilled, (state, action: PayloadAction<Barber[]>) => {\r\n        state.loading = false;\r\n        state.barbers = action.payload;\r\n      })\r\n      .addCase(fetchBarbers.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n      \r\n      .addCase(deleteBarber.fulfilled, (state, action: PayloadAction<string>) => {\r\n        state.barbers = state.barbers.filter(barber => barber._id !== action.payload);\r\n      })\r\n      .addCase(deleteBarber.rejected, (state, action) => {\r\n        state.error = action.payload as string;\r\n      })\r\n      \r\n  },\r\n});\r\n\r\nexport default barberSlice.reducer;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAgBA,MAAM,eAA4B;IAChC,SAAS,EAAE;IACX,SAAS;IACT,OAAO;AACT;AAGO,MAAM,eAAe,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB,OAAO,GAAG;IACzE,IAAI;QACF,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,yBAAyB,EAAE,iIAAA,CAAA,WAAQ,CAAC,MAAM,CAAC,GAAG,EAAE;QAC7E,OAAO,IAAI,IAAI,CAAC,SAAS;IAC3B,EAAE,OAAO,OAAY;QACnB,QAAQ,GAAG,CAAC,OAAM;QAElB,OAAO,SAAS,eAAe,CAAC,MAAM,QAAQ,EAAE,MAAM,WAAW;IAEnE;AACF;AAEO,MAAM,eAAe,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EACzC,wBACA,OAAO,UAAkB;IACvB,QAAQ,GAAG,CAAC,UAAU;IACtB,IAAI;QACF,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,CAAC,0BAA0B,EAAE,iIAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW;QACxF,QAAQ,GAAG,CAAC,UAAW;QAEvB,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,GAAG,CAAC,OAAQ;QAEpB,OAAO,SAAS,eAAe,CAAC,MAAM,QAAQ,EAAE,MAAM,WAAW;IACnE;AACF;AAGF,MAAM,cAAc,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC9B,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,aAAa,OAAO,EAAE,CAAC;YAC9B,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,aAAa,SAAS,EAAE,CAAC,OAAO;YACvC,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC,GACC,OAAO,CAAC,aAAa,QAAQ,EAAE,CAAC,OAAO;YACtC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B,GAEC,OAAO,CAAC,aAAa,SAAS,EAAE,CAAC,OAAO;YACvC,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,CAAA,SAAU,OAAO,GAAG,KAAK,OAAO,OAAO;QAC9E,GACC,OAAO,CAAC,aAAa,QAAQ,EAAE,CAAC,OAAO;YACtC,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;IAEJ;AACF;uCAEe,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Saloon%20Project/client/src/redux/features/ServicesSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { endpoint } from '../../app/api/endpoints';\r\n\r\nexport interface Service {\r\n  _id: string;\r\n  serviceName: string;\r\n  serviceCharge: number;\r\n  duration: string;\r\n  serviceDescription?: string;\r\n  image?: string;\r\n}\r\n\r\ninterface ServiceState {\r\n  service: Service[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: ServiceState = {\r\n  service: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const fetchServices = createAsyncThunk(\r\n  'services/fetchAll',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:5001/api/${endpoint.SERVICE.GET}`);\r\n      console.log(\"Fetched services:\", res.data);\r\n      return res.data.services  as Service[]; \r\n    } catch (error: any) {\r\n      console.log(\"Service fetch error:\", error);\r\n      return thunkAPI.rejectWithValue(\r\n        error.response?.data?.message || 'Failed to fetch services'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const deleteService = createAsyncThunk(\r\n  'services/delete',\r\n  async (serviceId: string, thunkAPI) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5001/api/${endpoint.ADMIN.SERVICE.DELETE(serviceId)}`);\r\n      return serviceId; \r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue(\r\n        error.response?.data?.message || 'Failed to delete service'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const addService = createAsyncThunk(\r\n  'services/add',\r\n  async (newService: Partial<Service>, thunkAPI) => {\r\n    try {\r\n      const res = await axios.post(`http://localhost:5001/api/${endpoint.ADMIN.SERVICE.ADD}`, newService);\r\n      return res.data.service as Service;\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue(\r\n        error.response?.data?.message || 'Failed to add service'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\nconst serviceSlice = createSlice({\r\n  name: 'service',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchServices.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchServices.fulfilled, (state, action: PayloadAction<Service[]>) => {\r\n        state.loading = false;\r\n        state.service = action.payload;\r\n      })\r\n      .addCase(fetchServices.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      })\r\n\r\n      .addCase(deleteService.fulfilled, (state, action: PayloadAction<string>) => {\r\n        state.service = state.service.filter(service => service._id !== action.payload);\r\n      })\r\n      .addCase(deleteService.rejected, (state, action) => {\r\n        state.error = action.payload as string;\r\n      })\r\n\r\n      .addCase(addService.fulfilled, (state, action: PayloadAction<Service>) => {\r\n        state.service.push(action.payload);\r\n      })\r\n      .addCase(addService.rejected, (state, action) => {\r\n        state.error = action.payload as string;\r\n      })\r\n      \r\n  },\r\n});\r\n\r\nexport default serviceSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAiBA,MAAM,eAA6B;IACjC,SAAS,EAAE;IACX,SAAS;IACT,OAAO;AACT;AAEO,MAAM,gBAAgB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAC1C,qBACA,OAAO,GAAG;IACR,IAAI;QACF,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,0BAA0B,EAAE,iIAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,GAAG,EAAE;QAC/E,QAAQ,GAAG,CAAC,qBAAqB,IAAI,IAAI;QACzC,OAAO,IAAI,IAAI,CAAC,QAAQ;IAC1B,EAAE,OAAO,OAAY;QACnB,QAAQ,GAAG,CAAC,wBAAwB;QACpC,OAAO,SAAS,eAAe,CAC7B,MAAM,QAAQ,EAAE,MAAM,WAAW;IAErC;AACF;AAIK,MAAM,gBAAgB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAC1C,mBACA,OAAO,WAAmB;IACxB,IAAI;QACF,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,CAAC,0BAA0B,EAAE,iIAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY;QAC1F,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,OAAO,SAAS,eAAe,CAC7B,MAAM,QAAQ,EAAE,MAAM,WAAW;IAErC;AACF;AAIK,MAAM,aAAa,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EACvC,gBACA,OAAO,YAA8B;IACnC,IAAI;QACF,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,0BAA0B,EAAE,iIAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE;QACxF,OAAO,IAAI,IAAI,CAAC,OAAO;IACzB,EAAE,OAAO,OAAY;QACnB,OAAO,SAAS,eAAe,CAC7B,MAAM,QAAQ,EAAE,MAAM,WAAW;IAErC;AACF;AAKF,MAAM,eAAe,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,cAAc,OAAO,EAAE,CAAC;YAC/B,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,cAAc,SAAS,EAAE,CAAC,OAAO;YACxC,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC,GACC,OAAO,CAAC,cAAc,QAAQ,EAAE,CAAC,OAAO;YACvC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B,GAEC,OAAO,CAAC,cAAc,SAAS,EAAE,CAAC,OAAO;YACxC,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,CAAA,UAAW,QAAQ,GAAG,KAAK,OAAO,OAAO;QAChF,GACC,OAAO,CAAC,cAAc,QAAQ,EAAE,CAAC,OAAO;YACvC,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B,GAEC,OAAO,CAAC,WAAW,SAAS,EAAE,CAAC,OAAO;YACrC,MAAM,OAAO,CAAC,IAAI,CAAC,OAAO,OAAO;QACnC,GACC,OAAO,CAAC,WAAW,QAAQ,EAAE,CAAC,OAAO;YACpC,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;IAEJ;AACF;uCAEe,aAAa,OAAO","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Saloon%20Project/client/src/redux/app/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport  BarberSlice  from \"../features/BarberSlice\";\r\nimport ServiceSlice  from \"../features/ServicesSlice\"\r\nconst store = configureStore({\r\n    reducer:{\r\n        barber:BarberSlice,\r\n        service:ServiceSlice\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport default store ; "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IACzB,SAAQ;QACJ,QAAO,2IAAA,CAAA,UAAW;QAClB,SAAQ,6IAAA,CAAA,UAAY;IACxB;AACJ;uCAIe","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Saloon%20Project/client/src/redux/ReduxProvider.tsx"],"sourcesContent":["\"use client\";\r\nimport { ReactNode, FC } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\n\r\n\r\ninterface StoreProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nconst ReduxProvider: FC<StoreProviderProps> = ({ children }) => {\r\n    return <Provider store={store}>{children}</Provider>;\r\n};\r\n\r\nexport default ReduxProvider;"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAUA,MAAM,gBAAwC,CAAC,EAAE,QAAQ,EAAE;IACvD,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,+HAAA,CAAA,UAAK;kBAAG;;;;;;AACpC;KAFM;uCAIS","debugId":null}}]
}