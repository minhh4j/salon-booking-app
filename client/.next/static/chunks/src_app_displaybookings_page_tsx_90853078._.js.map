{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Saloon%20Project/client/src/app/displaybookings/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch, RootState } from '@/redux/app/store';\r\nimport { getMyBookings } from '@/redux/features/AppoinmentSlice';\r\nimport { useUser } from '@clerk/nextjs';\r\nimport moment from 'moment';\r\n\r\nconst MyBookingsPage = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user } = useUser();\r\n  const userId = user?.id;\r\n\r\n  const { myBookings, loading, error } = useSelector(\r\n    (state: RootState) => state.appointment\r\n  );\r\n\r\n  console.log(myBookings , \"fghjklkjh\")\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(getMyBookings(userId));\r\n    }\r\n  }, [userId, dispatch]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen px-6 py-10 bg-[#121212] text-[#E0E0E0]\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <h1 className=\"text-4xl font-bold mb-8 text-[#C87941]\">My Bookings</h1>\r\n\r\n        {loading && <p className=\"text-yellow-500\">Loading your bookings...</p>}\r\n        {error && <p className=\"text-red-500\">Error: {error}</p>}\r\n        {!loading && myBookings.length === 0 && (\r\n          <p className=\"text-gray-400 italic\">No bookings found for your account.</p>\r\n        )}\r\n\r\n        <div className=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-6 mt-6\">\r\n          {myBookings.map((booking) => (\r\n            <div\r\n              key={booking._id}\r\n              className=\"bg-[#1E1E1E] p-6 rounded-2xl border border-[#2f2f2f] hover:border-[#C87941] transition-all duration-300 shadow-sm\"\r\n            >\r\n              <h3 className=\"text-xl font-semibold text-[#DBCBBD] mb-4\">Booking Info</h3>\r\n\r\n              <div className=\"space-y-2 text-sm\">\r\n                <p>\r\n                  <span className=\"text-gray-400\">Date:</span> {moment(booking?.date).format('YYYY-MM-DD')}\r\n                </p>\r\n                <p>\r\n                  <span className=\"text-gray-400\">Time:</span> {booking.timeSlot}\r\n                </p>\r\n                <p>\r\n                  <span className=\"text-gray-400\">Status:</span>{' '}\r\n                  <span\r\n                    className={`font-semibold ${\r\n                      booking.status === 'approved'\r\n                        ? 'text-green-400'\r\n                        : booking.status === 'declined'\r\n                        ? 'text-red-400'\r\n                        : 'text-yellow-400'\r\n                    }`}\r\n                  >\r\n                    {booking.status}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"text-gray-400\">Payment:</span>{' '}\r\n                  {booking.paymentStatus === 'paid' ? ' Paid' : 'Unpaid'}\r\n                </p>\r\n                <p>\r\n                  <span className=\"text-gray-400\">Price:</span>{' '}\r\n                  <span className=\"font-bold\">â‚¹{booking.price}</span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"mt-4\">\r\n                <p className=\"text-sm text-[#C87941] font-semibold mb-1\">Services:</p>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {booking.serviceId?.map((service  , idx ) => (\r\n                    <span\r\n                      key={idx}\r\n                      className=\"bg-[#2B2B2B] text-[#DBCBBD] text-xs px-3 py-1 rounded-full border border-[#3f3f3f]\"\r\n                    >\r\n                      {service.serviceName}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyBookingsPage;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;;;AAPA;;;;;;AASA,MAAM,iBAAiB;;IACrB,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;IACvB,MAAM,SAAS,MAAM;IAErB,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;sCAC/C,CAAC,QAAqB,MAAM,WAAW;;IAGzC,QAAQ,GAAG,CAAC,YAAa;IAEzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,QAAQ;gBACV,SAAS,CAAA,GAAA,+IAAA,CAAA,gBAAa,AAAD,EAAE;YACzB;QACF;mCAAG;QAAC;QAAQ;KAAS;IAErB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAyC;;;;;;gBAEtD,yBAAW,6LAAC;oBAAE,WAAU;8BAAkB;;;;;;gBAC1C,uBAAS,6LAAC;oBAAE,WAAU;;wBAAe;wBAAQ;;;;;;;gBAC7C,CAAC,WAAW,WAAW,MAAM,KAAK,mBACjC,6LAAC;oBAAE,WAAU;8BAAuB;;;;;;8BAGtC,6LAAC;oBAAI,WAAU;8BACZ,WAAW,GAAG,CAAC,CAAC,wBACf,6LAAC;4BAEC,WAAU;;8CAEV,6LAAC;oCAAG,WAAU;8CAA4C;;;;;;8CAE1D,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAY;gDAAE,CAAA,GAAA,mIAAA,CAAA,UAAM,AAAD,EAAE,SAAS,MAAM,MAAM,CAAC;;;;;;;sDAE7E,6LAAC;;8DACC,6LAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAY;gDAAE,QAAQ,QAAQ;;;;;;;sDAEhE,6LAAC;;8DACC,6LAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAe;8DAC/C,6LAAC;oDACC,WAAW,CAAC,cAAc,EACxB,QAAQ,MAAM,KAAK,aACf,mBACA,QAAQ,MAAM,KAAK,aACnB,iBACA,mBACJ;8DAED,QAAQ,MAAM;;;;;;;;;;;;sDAGnB,6LAAC;;8DACC,6LAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAgB;gDAC/C,QAAQ,aAAa,KAAK,SAAS,UAAU;;;;;;;sDAEhD,6LAAC;;8DACC,6LAAC;oDAAK,WAAU;8DAAgB;;;;;;gDAAc;8DAC9C,6LAAC;oDAAK,WAAU;;wDAAY;wDAAE,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;8CAI/C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAA4C;;;;;;sDACzD,6LAAC;4CAAI,WAAU;sDACZ,QAAQ,SAAS,EAAE,IAAI,CAAC,SAAW,oBAClC,6LAAC;oDAEC,WAAU;8DAET,QAAQ,WAAW;mDAHf;;;;;;;;;;;;;;;;;2BAzCR,QAAQ,GAAG;;;;;;;;;;;;;;;;;;;;;AAuD9B;GAtFM;;QACa,4JAAA,CAAA,cAAW;QACX,+JAAA,CAAA,UAAO;QAGe,4JAAA,CAAA,cAAW;;;KAL9C;uCAwFS","debugId":null}}]
}