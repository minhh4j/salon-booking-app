{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Saloon%20Project/client/src/app/displaybookings/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch, RootState } from '@/redux/app/store';\r\nimport { getMyBookings } from '@/redux/features/AppoinmentSlice';\r\nimport { useUser } from '@clerk/nextjs';\r\nimport moment from 'moment';\r\nimport { toast, Toaster } from 'sonner';\r\n\r\nconst MyBookingsPage = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user } = useUser();\r\n  const userId = user?.id;\r\n\r\n  const { myBookings, loading, error } = useSelector(\r\n    (state: RootState) => state.appointment\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(getMyBookings(userId));\r\n      toast.info(\"This is booking list page\");\r\n    }\r\n  }, [userId, dispatch]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen px-6 pt-28 pb-10 bg-[#121212] text-[#E0E0E0]\">\r\n       <Toaster  />\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <h1 className=\"text-4xl font-bold mb-8 text-[#d8a60d]\">My Bookings</h1>\r\n\r\n        {loading && <p className=\"text-yellow-500\">Loading your bookings...</p>}\r\n        {error && <p className=\"text-red-500\">Error: {error}</p>}\r\n        {!loading && myBookings.length === 0 && (\r\n          <p className=\"text-gray-400 italic\">No bookings found for your account.</p>\r\n        )}\r\n\r\n        <div className=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-6 mt-6\">\r\n          {myBookings.map((booking) => (\r\n            <div\r\n              key={booking._id}\r\n              className=\"bg-[#1E1E1E] p-6 rounded-2xl border border-[#454037] hover:border-[#e9cd81] transition-all duration-300 shadow-sm\"\r\n            >\r\n              <h3 className=\"text-xl font-semibold text-[#987b22] mb-4\">Booking Info</h3>\r\n\r\n              <div className=\"space-y-2 text-sm\">\r\n                <p>\r\n                  <span className=\"text-gray-400\">Date:</span> {moment(booking?.date).format('YYYY-MM-DD')}\r\n                </p>\r\n                <p>\r\n                  <span className=\"text-gray-400\">Time:</span> {booking.timeSlot}\r\n                </p>\r\n                <p>\r\n                  <span className=\"text-gray-400\">Status:</span>{' '}\r\n                  <span\r\n                    className={`font-semibold ${booking.status === 'approved'\r\n                        ? 'text-green-400'\r\n                        : booking.status === 'declined'\r\n                          ? 'text-red-400'\r\n                          : 'text-yellow-400'\r\n                      }`}\r\n                  >\r\n                    {booking.status}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  <span className=\"text-gray-400\">Payment:</span>{' '}\r\n                  {booking.paymentStatus === 'paid' ? ' Paid' : 'Unpaid'}\r\n                </p>\r\n                <p>\r\n                  <span className=\"text-gray-400\">Price:</span>{' '}\r\n                  <span className=\"font-bold\">â‚¹{booking.price}</span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"mt-4\">\r\n                <p className=\"text-sm text-[#757442] font-semibold mb-1\">Services:</p>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {booking.serviceId?.map((service, idx) => (\r\n                    <span\r\n                      key={idx}\r\n                      className=\"bg-[#2B2B2B] text-[#DBCBBD] text-xs px-3 py-1 rounded-full border border-[#3f3f3f]\"\r\n                    >\r\n                      {service.serviceName}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyBookingsPage;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AARA;;;;;;;AAUA,MAAM,iBAAiB;;IACrB,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;IACvB,MAAM,SAAS,MAAM;IAErB,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;sCAC/C,CAAC,QAAqB,MAAM,WAAW;;IAGzC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,QAAQ;gBACV,SAAS,CAAA,GAAA,+IAAA,CAAA,gBAAa,AAAD,EAAE;gBACvB,2IAAA,CAAA,QAAK,CAAC,IAAI,CAAC;YACb;QACF;mCAAG;QAAC;QAAQ;KAAS;IAErB,qBACE,6LAAC;QAAI,WAAU;;0BACZ,6LAAC,2IAAA,CAAA,UAAO;;;;;0BACT,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyC;;;;;;oBAEtD,yBAAW,6LAAC;wBAAE,WAAU;kCAAkB;;;;;;oBAC1C,uBAAS,6LAAC;wBAAE,WAAU;;4BAAe;4BAAQ;;;;;;;oBAC7C,CAAC,WAAW,WAAW,MAAM,KAAK,mBACjC,6LAAC;wBAAE,WAAU;kCAAuB;;;;;;kCAGtC,6LAAC;wBAAI,WAAU;kCACZ,WAAW,GAAG,CAAC,CAAC,wBACf,6LAAC;gCAEC,WAAU;;kDAEV,6LAAC;wCAAG,WAAU;kDAA4C;;;;;;kDAE1D,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;;kEACC,6LAAC;wDAAK,WAAU;kEAAgB;;;;;;oDAAY;oDAAE,CAAA,GAAA,mIAAA,CAAA,UAAM,AAAD,EAAE,SAAS,MAAM,MAAM,CAAC;;;;;;;0DAE7E,6LAAC;;kEACC,6LAAC;wDAAK,WAAU;kEAAgB;;;;;;oDAAY;oDAAE,QAAQ,QAAQ;;;;;;;0DAEhE,6LAAC;;kEACC,6LAAC;wDAAK,WAAU;kEAAgB;;;;;;oDAAe;kEAC/C,6LAAC;wDACC,WAAW,CAAC,cAAc,EAAE,QAAQ,MAAM,KAAK,aACzC,mBACA,QAAQ,MAAM,KAAK,aACjB,iBACA,mBACJ;kEAEH,QAAQ,MAAM;;;;;;;;;;;;0DAGnB,6LAAC;;kEACC,6LAAC;wDAAK,WAAU;kEAAgB;;;;;;oDAAgB;oDAC/C,QAAQ,aAAa,KAAK,SAAS,UAAU;;;;;;;0DAEhD,6LAAC;;kEACC,6LAAC;wDAAK,WAAU;kEAAgB;;;;;;oDAAc;kEAC9C,6LAAC;wDAAK,WAAU;;4DAAY;4DAAE,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;kDAI/C,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAE,WAAU;0DAA4C;;;;;;0DACzD,6LAAC;gDAAI,WAAU;0DACZ,QAAQ,SAAS,EAAE,IAAI,CAAC,SAAS,oBAChC,6LAAC;wDAEC,WAAU;kEAET,QAAQ,WAAW;uDAHf;;;;;;;;;;;;;;;;;+BAxCR,QAAQ,GAAG;;;;;;;;;;;;;;;;;;;;;;AAsD9B;GArFM;;QACa,4JAAA,CAAA,cAAW;QACX,+JAAA,CAAA,UAAO;QAGe,4JAAA,CAAA,cAAW;;;KAL9C;uCAuFS","debugId":null}}]
}